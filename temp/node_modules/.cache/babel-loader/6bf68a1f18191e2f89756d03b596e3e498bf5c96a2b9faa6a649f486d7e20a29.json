{"ast":null,"code":"var _jsxFileName = \"/Users/avaburnham/Desktop/dream-log/dream-log-frontend/src/components/DreamList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DreamList = ({\n  refresh\n}) => {\n  _s();\n  const [dreams, setDreams] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchDreams = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('Not authenticated. Please log in.');\n        }\n        const response = await fetch('http://localhost:4000/dreams', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          const errData = await response.json().catch(() => ({}));\n          throw new Error(errData.error || 'Failed to fetch dreams');\n        }\n        const data = await response.json();\n        setDreams(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDreams();\n  }, [refresh]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading dreams...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: dreams.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No dreams logged yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dreams.map(dream => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [new Date(dream.createdAt).toLocaleString(), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), \" \", dream.text]\n      }, dream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(DreamList, \"zqh3YGK/7KLV3IpQaYsuuC2Z/Qo=\");\n_c = DreamList;\nexport default DreamList;\nvar _c;\n$RefreshReg$(_c, \"DreamList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DreamList","refresh","_s","dreams","setDreams","loading","setLoading","error","setError","fetchDreams","token","localStorage","getItem","Error","response","fetch","headers","ok","errData","json","catch","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","dream","Date","createdAt","toLocaleString","text","id","_c","$RefreshReg$"],"sources":["/Users/avaburnham/Desktop/dream-log/dream-log-frontend/src/components/DreamList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\ninterface Dream {\n  id: number;\n  text: string;\n  createdAt: string;\n}\n\ninterface DreamListProps {\n  refresh: boolean;\n}\n\nconst DreamList: React.FC<DreamListProps> = ({ refresh }) => {\n  const [dreams, setDreams] = useState<Dream[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchDreams = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          throw new Error('Not authenticated. Please log in.');\n        }\n        const response = await fetch('http://localhost:4000/dreams', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!response.ok) {\n          const errData = await response.json().catch(() => ({}));\n          throw new Error(errData.error || 'Failed to fetch dreams');\n        }\n        const data = await response.json();\n        setDreams(data);\n      } catch (err) {\n        setError((err as Error).message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDreams();\n  }, [refresh]);\n\n  if (loading) return <p>Loading dreams...</p>;\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <div>\n      {dreams.length === 0 ? (\n        <p>No dreams logged yet.</p>\n      ) : (\n        <ul>\n          {dreams.map((dream) => (\n            <li key={dream.id}>\n              <strong>{new Date(dream.createdAt).toLocaleString()}:</strong> {dream.text}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default DreamList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}