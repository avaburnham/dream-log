{"ast":null,"code":"var _jsxFileName = \"/Users/avaburnham/Desktop/dream-log/dream-log-frontend/src/components/AnalyzeDream.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnalyzeDream = ({\n  refresh\n}) => {\n  _s();\n  const [dreams, setDreams] = useState([]);\n  const [selectedId, setSelectedId] = useState(null);\n  const [analysis, setAnalysis] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Fetch dreams when component mounts or refresh toggles\n  useEffect(() => {\n    setAnalysis('');\n    setError('');\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('Not authenticated. Please log in.');\n      setDreams([]);\n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    fetch(`http://localhost:4000/dreams?userId=${userId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    }).then(async res => {\n      if (!res.ok) {\n        const errData = await res.json().catch(() => ({}));\n        throw new Error(errData.error || 'Failed to load dreams.');\n      }\n      return res.json();\n    }).then(data => setDreams(data.reverse())).catch(err => setError(err.message));\n  }, [refresh]);\n  const selectedDream = dreams.find(d => d.id === selectedId);\n  const handleAnalyze = async () => {\n    setError('');\n    setAnalysis('');\n    if (!selectedDream) {\n      setError('Please select a dream to analyze.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await fetch('http://localhost:4000/analyze-hf', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: selectedDream.text\n        })\n      });\n      const result = await res.json();\n      if (result.labels && result.scores) {\n        setAnalysis(`Most likely feeling: ${result.labels[0]} (score: ${result.scores[0].toFixed(2)})\\n\\nAll labels:\\n` + result.labels.map((label, idx) => `${label}: ${result.scores[idx].toFixed(2)}`).join('\\n'));\n      } else if (result.error) {\n        setError(result.error);\n      } else {\n        setError('No analysis received.');\n      }\n    } catch (err) {\n      setError('Error analyzing dream.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"h5 mb-3\",\n      children: \"Analyze a Dream\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        value: selectedId !== null && selectedId !== void 0 ? selectedId : '',\n        onChange: e => setSelectedId(Number(e.target.value)),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a dream...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), dreams.map(dream => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dream.id,\n          children: [new Date(dream.createdAt).toLocaleString(), \" - \", dream.text.slice(0, 30), \"...\"]\n        }, dream.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-info mb-3\",\n      onClick: handleAnalyze,\n      disabled: !selectedDream || loading,\n      children: loading ? 'Analyzing...' : 'Analyze'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), analysis && /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"alert alert-secondary mt-3\",\n      style: {\n        whiteSpace: 'pre-wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"AI Analysis:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), analysis]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(AnalyzeDream, \"Pbr/s74bRgmJSPYzL0De9GOtrPA=\");\n_c = AnalyzeDream;\nexport default AnalyzeDream;\nvar _c;\n$RefreshReg$(_c, \"AnalyzeDream\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AnalyzeDream","refresh","_s","dreams","setDreams","selectedId","setSelectedId","analysis","setAnalysis","loading","setLoading","error","setError","token","localStorage","getItem","userId","fetch","headers","then","res","ok","errData","json","catch","Error","data","reverse","err","message","selectedDream","find","d","id","handleAnalyze","method","body","JSON","stringify","text","result","labels","scores","toFixed","map","label","idx","join","children","className","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","Number","target","dream","Date","createdAt","toLocaleString","slice","onClick","disabled","style","whiteSpace","_c","$RefreshReg$"],"sources":["/Users/avaburnham/Desktop/dream-log/dream-log-frontend/src/components/AnalyzeDream.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\ninterface Dream {\n  id: number;\n  text: string;\n  createdAt: string; // or Date, if your backend returns a Date\n}\n\ninterface AnalyzeDreamProps {\n  refresh: boolean;\n}\n\nconst AnalyzeDream: React.FC<AnalyzeDreamProps> = ({ refresh }) => {\n  const [dreams, setDreams] = useState<Dream[]>([]);\n  const [selectedId, setSelectedId] = useState<number | null>(null);\n  const [analysis, setAnalysis] = useState<string>('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string>('');\n\n  // Fetch dreams when component mounts or refresh toggles\n  useEffect(() => {\n    setAnalysis('');\n    setError('');\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('Not authenticated. Please log in.');\n      setDreams([]);\n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    fetch(`http://localhost:4000/dreams?userId=${userId}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json',\n      },\n    })\n\n      .then(async res => {\n        if (!res.ok) {\n          const errData = await res.json().catch(() => ({}));\n          throw new Error(errData.error || 'Failed to load dreams.');\n        }\n        return res.json();\n      })\n      .then(data => setDreams(data.reverse()))\n      .catch(err => setError(err.message));\n  }, [refresh]);\n\n  const selectedDream = dreams.find(d => d.id === selectedId);\n\n  const handleAnalyze = async () => {\n    setError('');\n    setAnalysis('');\n    if (!selectedDream) {\n      setError('Please select a dream to analyze.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const res = await fetch('http://localhost:4000/analyze-hf', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ text: selectedDream.text }),\n      });\n      const result = await res.json();\n      if (result.labels && result.scores) {\n        setAnalysis(\n          `Most likely feeling: ${result.labels[0]} (score: ${result.scores[0].toFixed(2)})\\n\\nAll labels:\\n` +\n            result.labels\n              .map(\n                (label: string, idx: number) =>\n                  `${label}: ${result.scores[idx].toFixed(2)}`\n              )\n              .join('\\n')\n        );\n      } else if (result.error) {\n        setError(result.error);\n      } else {\n        setError('No analysis received.');\n      }\n    } catch (err) {\n      setError('Error analyzing dream.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"h5 mb-3\">Analyze a Dream</h2>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n      <div className=\"mb-3\">\n        <select\n          className=\"form-select\"\n          value={selectedId ?? ''}\n          onChange={e => setSelectedId(Number(e.target.value))}\n        >\n          <option value=\"\">Select a dream...</option>\n          {dreams.map(dream => (\n            <option key={dream.id} value={dream.id}>\n              {new Date(dream.createdAt).toLocaleString()} - {dream.text.slice(0, 30)}...\n            </option>\n          ))}\n        </select>\n      </div>\n      <button\n        className=\"btn btn-info mb-3\"\n        onClick={handleAnalyze}\n        disabled={!selectedDream || loading}\n      >\n        {loading ? 'Analyzing...' : 'Analyze'}\n      </button>\n      {analysis && (\n        <pre className=\"alert alert-secondary mt-3\" style={{ whiteSpace: 'pre-wrap' }}>\n          <strong>AI Analysis:</strong>\n          <br />\n          {analysis}\n        </pre>\n      )}\n    </div>\n  );\n};\n\nexport default AnalyzeDream;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}