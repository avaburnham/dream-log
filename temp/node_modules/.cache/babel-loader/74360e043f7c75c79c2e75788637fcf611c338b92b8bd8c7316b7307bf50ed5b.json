{"ast":null,"code":"var _jsxFileName = \"/Users/avaburnham/Desktop/dream-log/dream-log-frontend/src/components/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const endpoint = isRegistering ? 'http://localhost:4000/register' : 'http://localhost:4000/login';\n      const res = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        throw new Error(data.error || 'Authentication failed');\n      }\n      if (isRegistering) {\n        // After registering, log in immediately, or prompt user to login.\n        setIsRegistering(false);\n        setPassword('');\n        setError('Account created! Please log in.');\n      } else {\n        onLogin(data.token, data.userId, email);\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control mb-2\",\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        autoComplete: \"username\",\n        required: true,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control mb-2\",\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        autoComplete: isRegistering ? \"new-password\" : \"current-password\",\n        required: true,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary w-100\",\n        type: \"submit\",\n        children: isRegistering ? 'Create Account' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-link\",\n        onClick: () => {\n          setIsRegistering(!isRegistering);\n          setError('');\n        },\n        children: isRegistering ? 'Already have an account? Login' : 'Create Account'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"i+xJcqBZB67Cfil7XqoCdKvUoiM=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","onLogin","_s","email","setEmail","password","setPassword","isRegistering","setIsRegistering","error","setError","handleSubmit","e","preventDefault","endpoint","res","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","token","userId","err","message","children","onSubmit","className","type","placeholder","value","autoComplete","required","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/avaburnham/Desktop/dream-log/dream-log-frontend/src/components/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface LoginProps {\n  onLogin: (token: string, userId: number, email: string) => void;\n}\n\nconst Login: React.FC<LoginProps> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    try {\n      const endpoint = isRegistering\n        ? 'http://localhost:4000/register'\n        : 'http://localhost:4000/login';\n      const res = await fetch(endpoint, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password }),\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        throw new Error(data.error || 'Authentication failed');\n      }\n      if (isRegistering) {\n        // After registering, log in immediately, or prompt user to login.\n        setIsRegistering(false);\n        setPassword('');\n        setError('Account created! Please log in.');\n      } else {\n        onLogin(data.token, data.userId, email);\n      }\n    } catch (err: any) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"mb-3\">\n        <input\n          className=\"form-control mb-2\"\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          autoComplete=\"username\"\n          required\n          onChange={e => setEmail(e.target.value)}\n        />\n        <input\n          className=\"form-control mb-2\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          autoComplete={isRegistering ? \"new-password\" : \"current-password\"}\n          required\n          onChange={e => setPassword(e.target.value)}\n        />\n        <button className=\"btn btn-primary w-100\" type=\"submit\">\n          {isRegistering ? 'Create Account' : 'Login'}\n        </button>\n      </form>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n      <div className=\"text-center\">\n        <button\n          type=\"button\"\n          className=\"btn btn-link\"\n          onClick={() => {\n            setIsRegistering(!isRegistering);\n            setError('');\n          }}\n        >\n          {isRegistering\n            ? 'Already have an account? Login'\n            : 'Create Account'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}